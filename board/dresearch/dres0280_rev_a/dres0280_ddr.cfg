// adapted from kosagi novena ddr.cfg by FBL for dres0280 2013-09-04
// values and register order taken from the working hello.bin dcd.c

// Copyright (C) 2011 Freescale Semiconductor, Inc.
// Jason Liu <r64343@freescale.com>
//
// See file CREDITS for list of people who contributed to this
// project.
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License as
// published by the Free Software Foundation; either version 2 of
// the License or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not write to the Free Software
// Foundation Inc. 51 Franklin Street Fifth Floor Boston,
// MA 02110-1301 USA
//
// Refer docs/README.imxmage for more details about how-to configure
// and create imximage boot image
//
// The syntax is taken as close as possible with the kwbimage

// image version

IMAGE_VERSION 2

// Boot Device : one of
// spi, sd (the board has no nand neither onenand)

BOOT_FROM      sd

// Device Configuration Data (DCD)
//
// Each entry must have the format:
// Addr-type           Address        Value
//
// where:
//      Addr-type register length (1,2 or 4 bytes)
//      Address   absolute address of the register
//      value     value to be stored in the register

//=============================================================================                 
// Enable all clocks (they are disabled by ROM code)               
//=============================================================================              
//DATA 4    0x020c4068  0xffffffff // these weren't enabled in the original .cfg file
//DATA 4    0x020c406c  0xffffffff 
//DATA 4    0x020c4070  0xffffffff 
//DATA 4    0x020c4074  0xffffffff 
//DATA 4    0x020c4078  0xffffffff 
//DATA 4    0x020c407c  0xffffffff 
//DATA 4    0x020c4080  0xffffffff 
//DATA 4    0x020c4084  0xffffffff 
                   
//============================================================================= 
// IOMUX    
//=============================================================================                 
//DDR IO TYPE:        
DATA 4 0x020e0798 0x000C0000 // IOMUXC_SW_PAD_CTL_GRP_DDR_TYPE 
DATA 4 0x020e0758 0x00000000 // IOMUXC_SW_PAD_CTL_GRP_DDRPKE 
 
//CLOCK:       
DATA 4 0x020e0588 0x00020038 // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDCLK_0
DATA 4 0x020e0594 0x00020038 // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDCLK_1
    
//ADDRESS:             
DATA 4 0x020e056c 0x00000038 // IOMUXC_SW_PAD_CTL_PAD_DRAM_CAS
DATA 4 0x020e0578 0x00000038 // IOMUXC_SW_PAD_CTL_PAD_DRAM_RAS
DATA 4 0x020e074c 0x00000038 // IOMUXC_SW_PAD_CTL_GRP_ADDDS 

//CONTROL:            
DATA 4 0x020e057c 0x00020038 // IOMUXC_SW_PAD_CTL_PAD_DRAM_RESET
DATA 4 0x020E0590 0x00003000 // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDCKE0
DATA 4 0x020E0598 0x00003000 // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDCKE1
DATA 4 0x020e058c 0x00000000 // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDBA2 - DSE can be configured using Group Control Register: IOMUXC_SW_PAD_CTL_GRP_CTLDS
DATA 4 0x020e059c 0x00003030 // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDODT0
DATA 4 0x020e05a0 0x00003030 // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDODT1
DATA 4 0x020e078c 0x00000030 // IOMUXC_SW_PAD_CTL_GRP_CTLDS 
   
//DATA STROBE:               
DATA 4 0x020e0750 0x00020000 // IOMUXC_SW_PAD_CTL_GRP_DDRMODE_CTL 
       
DATA 4 0x020e05a8 0x00000030 // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS0 
DATA 4 0x020e05b0 0x00000030 // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS1 
DATA 4 0x020e0524 0x00000030 // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS2 
DATA 4 0x020e051c 0x00000030 // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS3 
// disable unused pads
DATA 4 0x020e0518 0x00000000 // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS4 
DATA 4 0x020e050c 0x00000000 // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS5 
DATA 4 0x020e05b8 0x00000000 // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS6 
DATA 4 0x020e05c0 0x00000000 // IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS7 
      
//DATA:                   
DATA 4 0x020e0774 0x00020000 // IOMUXC_SW_PAD_CTL_GRP_DDRMODE

DATA 4 0x020e0784 0x00000030 // IOMUXC_SW_PAD_CTL_GRP_B0DS 
DATA 4 0x020e0788 0x00000030 // IOMUXC_SW_PAD_CTL_GRP_B1DS 
DATA 4 0x020e0794 0x00000030 // IOMUXC_SW_PAD_CTL_GRP_B2DS 
DATA 4 0x020e079c 0x00000030 // IOMUXC_SW_PAD_CTL_GRP_B3DS 
// disable unused pads
DATA 4 0x020e07a0 0x00000000 // IOMUXC_SW_PAD_CTL_GRP_B4DS 
DATA 4 0x020e07a4 0x00000000 // IOMUXC_SW_PAD_CTL_GRP_B5DS 
DATA 4 0x020e07a8 0x00000000 // IOMUXC_SW_PAD_CTL_GRP_B6DS 
DATA 4 0x020e0748 0x00000000 // IOMUXC_SW_PAD_CTL_GRP_B7DS 

DATA 4 0x020e05ac 0x00000030 // IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM0
DATA 4 0x020e05b4 0x00000030 // IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM1
DATA 4 0x020e0528 0x00000030 // IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM2
DATA 4 0x020e0520 0x00000030 // IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM3
// disable unused pads
DATA 4 0x020e0514 0x00000000 // IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM4
DATA 4 0x020e0510 0x00000000 // IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM5
DATA 4 0x020e05bc 0x00000000 // IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM6
DATA 4 0x020e05c4 0x00000000 // IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM7
       
//=============================================================================                 
// DDR Controller Registers
//=============================================================================              
// Manufacturer:  Micron  
// Device Part Number:  MT41J128M16
// Clock Freq.:   533MHz         
// Density per CS in Gb:  4    
// Chip Selects used:  1     
// Number of Banks:  8      
// Row address:      14       
// Column address:   10        
// Data bus width  32         
//=============================================================================     

// ZQ calibration 
// Bit[31:27]: ZQ early comparator enable timer. 0x14 = 21 cycles (Default)
// Bit[26]: Reserved (0)
// Bit[25:23]: Device ZQ short time. 010 128 cycles (Default)
// Bit[22:20]: Device ZQ long/oper time. 011 256 cycles - Default (JEDEC value for DDR3)
// Bit[19:17]: Device ZQ long/init time. 100  = 512 cycles - Default (JEDEC value for DDR3)
// Bit[16]: 1 = Force ZQ automatic calibration process with the i.MX ZQ calibration pad. When this bit is asserted then the MMDC will issue one ZQ automatic calibration process with the i.MX ZQ calibration pad.
// Bit[15:11]: ZQ HW calibration pull-down result. This field holds the pull-down resistor value calculated at the end of the ZQ automatic calibration process with the i.MX ZQ calibration pad.
// Bit[10: 6]: ZQ automatic calibration pull-up result. This field holds the pull-up resistor value calculated at the end ...
// Bit [ 5: 2}: 0 = ZQ calibration is performed every 1 ms.
// Bit [ 1: 0]: 3 = ZQ calibration is issued to i.MX ZQ calibration pad together with ZQ calibration command long/ short to the external DDR device periodically and when exiting self refresh
DATA 4 0x021b0800 0xa1390003  // MMDC1_MPZQHWCTRL == DDR_PHY_P0_MPZQHWCTRL, enable both one-time & periodic HW ZQ calibration.
DATA 4 0x021b4800 0xa1390003  // MMDC2_MPZQHWCTRL == DDR_PHY_P1_MPZQHWCTRL, enable both one-time & periodic HW ZQ calibration.

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// begin calibration results from dres0280 bring-up 2013-08-16
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// write leveling calibration results 
DATA 4 0x021b080c 0x003F003F	//MMDC1_MPWLDECTRL0 Byte1 Byte0
DATA 4 0x021b0810 0x003F003F	//MMDC1_MPWLDECTRL1 Byte3 Byte2

// delay calibration (tmdel)
// Read DQS Gating calibration                  
// Bit[31]: Reset Read Data FIFO and associated pointers
// Bit[30]: Read DQS gating sample cycle.
// Bit[29]: Read DQS gating disable
// Bit[28]: Enable automatic read DQS gating calibration
// Bit[27:24]: Read DQS gating half cycles delay for Byte1
// Bit[23]; DG extend upper boundary
// Bit[22:16]: Absolute read DQS gating delay offset for Byte1.
// Bit[12]: HW DQS gating error.
// Bit[11: 8]: Read DQS gating half cycles delay for Byte0
// Bit[ 6: 0]: Absolute read DQS gating delay offset for Byte0
DATA 4 0x021b083c 0x43070315         // MPDGCTRL0 PHY0

// Bit[31:28]: reserved
// Bit[15:12]: reserved
// sonst wie MPDGCTRL0 nur für Byte2 und Byte3
DATA 4 0x021b0840 0x0301027B         // MPDGCTRL1 PHY0

// Read calibration  
// 7-bit absolute delay between read DQS strobe and the read data of that Byte with fractions of a clock period and up to half cycle
// Bit[ 30: 24]: Absolute read delay offset for Byte3
// Bit[ 22: 16]: Absolute read delay offset for Byte2
// Bit[14: 8]: Absolute read delay offset for Byte1
// Bit[ 6: 0]: Absolute read delay offset for Byte0
DATA 4 0x021b0848 0x40404040 // MPRDDLCTL PHY0
   
// Write calibration     
// 7-bit absolute delay between write DQS strobe and the write data of that Byte with fractions of a clock period and up to half cycle
// Bit[ 30: 24]: Absolute write delay offset for Byte3
// Bit[ 22: 16]: Absolute write delay offset for Byte2
// Bit[14: 8]: Absolute write delay offset for Byte1
// Bit[ 6: 0]: Absolute write delay offset for Byte0
DATA 4 0x021b0850 0x40404040 // MPWRDLCTL PHY0

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  end  calibration results from dres0280 bring-up 2013-08-16
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// read data bit delay: (3 is the reccommended default value, although out of reset value is 0):   
DATA 4 0x021b081c 0x33333333       // DDR_PHY_P0_MPREDQBY0DL
DATA 4 0x021b0820 0x33333333       // DDR_PHY_P0_MPREDQBY1DL
DATA 4 0x021b0824 0x33333333       // DDR_PHY_P0_MPREDQBY2DL
DATA 4 0x021b0828 0x33333333       // DDR_PHY_P0_MPREDQBY3DL
 
// For i.mx6qd parts of versions A & B (v1.0, v1.1), uncomment the following lines. For version C (v1.2), keep commented   
// DATA 4 0x021b08c0 0x24911492   // fine tune SDCLK duty cyc to low - seen to improve measured duty cycle of i.mx6
// DATA 4 0x021b48c0 0x24911492   
          
// Complete calibration by forced measurement:   
DATA 4 0x021b08b8 0x00000800     // DDR_PHY_P0_MPMUR0, frc_msr
DATA 4 0x021b48b8 0x00000800     // DDR_PHY_P0_MPMUR0, frc_msr

// MMDC init:   
// MMDC Core Power Down Control Register
DATA 4 0x021b0004 0x00020036 // MMDC0_MDPDC 

// MMDC ODT timing control
DATA 4 0x021b0008 0x09444040 // MMDC0_MDOTC

// MMDC Core Timing Configuration Register 0: RAM timings
// MDCFG0[31:24]: tRFC, Refresh command to Active or Refresh command time
// MDCFG0[23:16]: tXS, Exit self refresh to non READ command
// MDCFG0[15:13]: tXP, Exit power down with DLL-on to any valid command
// MDCFG0[12:9]: tXPDLL,Exit precharge power down with DLL frozen to commands requiring DLL
// MDCFG0[8:4]: tFAW, Four Active Window (all banks).
// MDCFG0[3:0]: tCL, CAS Read Latency. 5= 8 cycles
DATA 4 0x021b000c 0x555A7975 // MMDC0_MDCFG0

// MMDC Core Timing Configuration Register 1: more RAM timings
// MDCFG1[31:29]: tRCD, Active command to internal read or write delay time (same bank).
// MDCFG1[28:26]: tRP, Precharge command period (same bank).
// MDCFG1[23:21]: tRC, Active to Active or Refresh command period (same bank).
// MDCFG1[20:16]: tRAS, Active to Precharge command period (same bank).
// MDCFG1[15]: tRPA, Precharge-all command period.
// MDCFG1[11:9]: tWR, WRITE recovery time (same bank).
// MDCFG1[8:5]: tMRD, Mode Register Set command cycle (all banks). In DDR3 mode this field shoud be set to max (tMRD,tMOD).
// MDCFG1[2:0]: tCWL, CAS Write Latency. 4= 6 cycles
DATA 4 0x021b0010 0xFF538F64 // MMDC0_MDCFG1

// MMDC Core Timing Configuration Register 2: even more RAM timings
// MDCFG2[24:16]: tDLLK, DLL locking time.
// MDCFG2[8:6]: tRTP, Internal READ command to Precharge command delay (same bank).
// MDCFG2[5:3]: tWTR, Internal WRITE to READ command delay (same bank).
// MDCFG2[2:0]: tRRD, Active to Active command period (all banks).
DATA 4 0x021b0014 0X01FF011B // MMDC0_MDCFG2

// MDMISC[20]: CALIB_PER_CS Number of chip-select for calibration process, 0=Calibration is targetted to CS0
// MDMISC[19]: ADDR_MIRROR 0=Address mirroring disabled
// MDMISC[18]: LHD Latency hiding disable 0=Latency hiding on.
// MDMISC[17:16]: WALAT Write Additional latency 0=No additional latency required.
// MDMISC[12]: BI_ON Bank Interleaving On. 0=Banks are not interleaved (bank-row-column) 1=Banks are interleaved, and address will be decoded as row-bank-column
// MDMISC[11]: LPDDR2_S2 This bit should be cleared in DDR3 mode
// MDMISC[10: 9]: MIF3_MODE Command prediction working mode. This field determines the level of command prediction that will be used by the MMDC
// MDMISC[ 8: 6]: RALAT Read Additional Latency (cycles)
// MDMISC[ 5]: DDR_4_BANK 0=8 banks device is being used. (Default)
// MDMISC[ 4: 3]: DDR_TYPE 0=DDR3 device is used. (Default)
// MDMISC[ 2]: LPDDR2_2CH 0=1-channel mode (DDR3)
// MDMISC[ 1]: RST Software Reset. When this bit is asserted then the internal FSMs and registers of the MMDC will be initialized.
DATA 4 0x021b0018 0x00001740 // MMDC0_MDMISC

// NOTE about MDMISC RALAT:      
// MDMISC: consider reducing RALAT if your 528MHz board design allow that. Lower RALAT benefits:    
// a. better operation at low frequency           
// b. Small performence improvment    
       
// MMDC Core Special Command Register - issue special commands manually toward the external DDR
// MMDC0_MDSCR[15]: Configuration request 1=This field guarantee safe configuration (or change configuration) of the MMDC while no access is in process and prevents an unexpected behaviour 
// MMDC0_MDSCR[ 6: 4]; CMD 
DATA 4 0x021b001c 0x00008000 // MMDC0_MDSCR, set the Configuration request bit during MMDC set up

// MMDC Core Read/Write Command Delay Register
// 14:12 RTW_SAME: Read to write delay for the same chip-select. total delay:  BL/2 + RTW_SAME + (tCL-tCWL) + RALAT
// 11: 9 WTR_DIFF: Write to read delay for different chip-select. total delay:  BL/2 + WTR_DIFF + (tCL-tCWL) + RALAT
//  8: 6 WTW_DIFF: Write to write delay for different chip-select. total delay: BL/2 + WTW_DIFF
//  5: 3 RTW_DIFF: Read to write delay for different chip-select. total delay: BL/2 + RTW_DIFF + (tCL - tCWL) + RALAT
//  2: 0 RTR_DIFF: Read to read delay for different chip-select. total delay:  BL/2 + RTR_DIFF
DATA 4 0x021b002c 0x000026d2 // MMDC0_MDRWD; recommend to maintain the default values

// MMDC Core Out of Reset Delays Register
// 23:16 tXPR 
// 13: 8 SDE_to_RST 
//  5: 0 RST_to_CKE
DATA 4 0x021b0030 0x005b0e21 // MMDC0_MDOR

// MDASP[6:0]: CS0_END (x+1 * 256 Mb)
DATA 4 0x021b0040 0x0000004F // MDASP CS0_END 

// MMDC0_MDCTL[31]: 1=enable CS0, 0=disable CS0
// MMDC0_MDCTL[30]: 1=enable CS1, 0=disable CS1
// MMDC0_MDCTL[26:24]: row address width: 000=11 bit, 001=12 bit, ... we have 011=14 bit
// MMDC0_MDCTL[22:20]: col address width: 000= 9 bit, 001=10 bit, ... we have 001=10 bit
// MMDC0_MDCTL[19]: burst length 1=8 (DDR3), 0=4 (LPDDR2)
// MMDC0_MDCTL[17:16]: DSIZ: 00=16 bit bus, 01=32 bit bus, 10=64 bit bus

// 32-bit mem
// DATA 4 0x021b0000 0x83190000 // MMDC0_MDCTL
// 16-bit mem
/DATA 4 0x021b0000 0x83180000 // MMDC0_MDCTL
        
// Mode register writes     
// Initialize 2Gb DDR3 - Micron MT41J128M16 14 row, 10 col, 8 banks
// see http://www.micron.com/~/media/Documents/Products/Technical%20Note/DRAM/tn4107_power_up_initialization_and_reset.pdf
//	26:25 Rtt_WR, Dynamic ODT ??  (10) RZQ/2, RZQ=240 Ohm)
//       23    SRT, Self-Refresh Temperature Range
//	22      ASR, Auto Self-Refresh
//	21:19 CWL,  CAS write Latency (CWL)  [001] 6 (2.5ns > tCK(avg) >= 1.875ns)
//	18:16 PASR, Partial Array Self-Refresh (Optional) 
DATA 4 0x021b001c 0x04088032 // MMDC0_MDSCR, MR2 write, CS0

// 	17	MPR ON/OFF	
//	18:16 MPR Loc, Multi purpose register location	
DATA 4 0x021b001c 0x00008033 // MMDC0_MDSCR, MR3 write, CS0

//	28	Qoff, Output buffer disable
//	27	TDQS, Termination Data Strobe enable
//	23	Level, Write leveling enable
//	20:19	AL, Additive Latency
//	25,22,18	Rtt_Nom, ODT Rtt Values, [001] RZQ/4, (RZQ=240 Ohm)
//	21,17	D.I.C, Output Driver Impedance Control	
//	16	DLL Enable
DATA 4 0x021b001c 0x00008031 // MMDC0_MDSCR, MR1 write, CS0

//	28	PPD, DLL usage during precharge power-down mode
//	27:25	WR, Write recovery for autoprecharge,  [00] 8cycles
//	24	DLL Reset,	(1) Reset
//	23	TM, Test Mode enabel
//	22:20,18	CL, CAS Latency,  [1000] CL =8
//	19	RBT, Read Burst Type
//	17:16	BL, Burst length, BL= 00, 8 (Fixed)
DATA 4 0x021b001c 0x09408030 // MMDC0_MDSCR, MR0 write, CS0

DATA 4 0x021b001c 0x04008040 // MMDC0_MDSCR, ZQ calibration command sent to device on CS0
      
// MDREF[15:14]: REF_SEL 1=Periodic refresh cycles will be triggered in frequency of 32KHz.
// MDREF[13:11]: REFR Refresh Rate. 011 = 4 refreshes
// MDREF[0]: START_REF 1=Start a refresh cycle. 0=Do nothing.
DATA 4 0x021b0020 0x00005800 // MMDC0_MDREF

// MMDC1_MPODTCTRL[18:16]: ODT3_INT_RES 000=disabled 010= 60 Ohm
// MMDC1_MPODTCTRL[14:12]: ODT2_INT_RES 000=disabled 010= 60 Ohm
// MMDC1_MPODTCTRL[10:08]: ODT1_INT_RES 000=disabled 010= 60 Ohm
// MMDC1_MPODTCTRL[06:04]: ODT0_INT_RES 000=disabled 010= 60 Ohm
// MMDC1_MPODTCTRL[03] ODT_RD_ACT_EN 0/1:  active CS ODT pin is disabled/enabled during read  access
// MMDC1_MPODTCTRL[02] ODT_RD_PAS_EN 0/1: passive CS ODT pin is disabled/enabled during read  access
// MMDC1_MPODTCTRL[01] ODT_WR_ACT_EN 0/1:  active CS ODT pin is disabled/enabled during write access
// MMDC1_MPODTCTRL[00] ODT_WR_PAS_EN 0/1: passive CS ODT pin is disabled/enabled during write access
DATA 4 0x021b0818 0x00022227 // DDR_PHY_P0_MPODTCTRL
 
DATA 4 0x021b0004 0x00025576 // MMDC0_MDPDC with PWDT bits set
DATA 4 0x021b0404 0x00011006 // MMDC0_MAPSR ADOPT power down enabled, MMDC will enter automatically to self-refresh while the number of idle cycle reached.
 
DATA 4 0x021b001c 0x00000000 // MMDC0_MDSCR, clear this register (especially the configuration bit as initialization is complete)

// mmdc1 core power saving register
DATA 4 0x021b0404 0x00011006

// set the default clock gate to save power
DATA 4 0x020c4068 0x00C03F3F
DATA 4 0x020c406c 0x0030FC03
DATA 4 0x020c4070 0x0FFFC000
DATA 4 0x020c4074 0x3FF00000
DATA 4 0x020c4078 0x00FFF300
DATA 4 0x020c407c 0x0F0000C3
DATA 4 0x020c4080 0x000003FF

// enable AXI cache for VDOA/VPU/IPU
DATA 4 0x020e0010 0xF00000CF

// set IPU AXI-id0 Qos=0xf(bypass) AXI-id1 Qos=0x7
DATA 4 0x020e0018 0x007F007F
DATA 4 0x020e001c 0x007F007F
